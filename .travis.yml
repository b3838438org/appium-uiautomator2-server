language: android
jdk: oraclejdk8
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-6
android:
  components:
    - platform-tools
    - tools
    - build-tools
  licenses:
    - android-sdk-preview-license-.+
    - android-sdk-license-.+
    - google-gdk-license-.+
env:
  global:
    - DEVICE=android
    - START_EMU=1
    - EMU_NAME=test
    - EMU_ABI=x86
    - EMU_TAG=default
    - EMU_TARGET=android-26
    - BUILD_TOOLS=28.0.3
    - API_TARGET=android-28
    - QEMU_AUDIO_DRV=none
    - E2E_TEST_PACKAGE=io.appium.uiautomator2.unittest.test
    - CC=gcc-6 CXX=g++-6
  matrix:
    - TEST=unit START_EMU=0
    - TEST=AlertCommandsTest
    - TEST=ActionsCommandsTest
    - TEST=GestureCommandsTest
    - TEST=DeviceCommandsTest
    - TEST=ElementCommandsTest
    - TEST=GestureCommandsTest EMU_TARGET=android-22
    - TEST=DeviceCommandsTest EMU_TARGET=android-22
    - TEST=ElementCommandsTest EMU_TARGET=android-22
before_install:
  - echo $ANDROID_HOME
  - |
    if [ -z ${CLOUD} ]; then
      echo yes | android update sdk --no-ui -t tools
      echo yes | sdkmanager --update > /dev/null
      echo yes | sdkmanager "build-toold;${BUILD_TOOLS}" >/dev/null
      echo yes | sdkmanager "platforms;${API_TARGET}" >/dev/null

      if [ ${START_EMU} = "1" ]; then
        echo yes | sdkmanager "platform-tools" >/dev/null
        echo yes | sdkmanager tools > /dev/null
        echo yes | sdkmanager "build-tools;${API_TARGET}" >/dev/null
        echo yes | sdkmanager "platforms;${EMU_TARGET}" > /dev/null
        echo yes | sdkmanager "extras;android;m2repository" > /dev/null
        echo yes | sdkmanager "extras;google;m2repository" > /dev/null
        echo yes | sdkmanager --channel=3 "emulator" >/dev/null
        export EMU_IMAGE="system-images;${EMU_TARGET};${EMU_TAG};${EMU_ABI}"
        for retry in 1 2 3; do
          echo yes | sdkmanager "${EMU_IMAGE}" > /dev/null && break
          echo "sdkmanager was not able to download the ${EMU_IMAGE} image (retry ${retry})"
          sleep 5
        done
        sdkmanager --list
        export TOOLS=${ANDROID_HOME}/tools
        export PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${TOOLS}:${TOOLS}/bin:${ANDROID_HOME}/platform-tools:${PATH}
        echo no | avdmanager create avd -k "${EMU_IMAGE}" -n "${EMU_NAME}" -f --abi "${EMU_ABI}" --tag "${EMU_TAG}" || exit 1
        emulator -avd "${EMU_NAME}" -no-accel -no-snapshot -no-window -camera-back none -camera-front none -selinux permissive -qemu -m 2048 &
      else
        sdkmanager --list
      fi
    fi
install:
  # node stuff
  - nvm install 8

  # npm stuff
  - npm install
  - npm install appium-test-support
before_script:
  - |
    if [ ${START_EMU} = "1" ]; then
      # make sure emulator started
      $(npm bin)/android-emu-travis-post;
    fi
script:
  - ./gradlew compileServerDebugSources compileServerDebugAndroidTestSources
  - |
    if [ "$TEST" == "unit" ]; then
      ./gradlew testServerDebugUnitTest
    else
      stdbuf -oL adb logcat -v time *:S appium:V appium-e2e-tests:V TestRunner:V *:E *:F > logcat.txt &
      ./gradlew connectedE2eTestDebugAndroidTest \
        -Pandroid.testInstrumentationRunnerArguments.class=$E2E_TEST_PACKAGE.$TEST \
        -Pandroid.testInstrumentationRunnerArguments.notAnnotation=$E2E_TEST_PACKAGE.internal.SkipHeadlessDevices
    fi
after_failure:
  - |
    if [ "$TEST" != "unit" ]; then
      echo -e "----UIAUTOMATOR DUMPS----\n"
      adb pull /sdcard/hierarchy .
      for f in ./hierarchy/*.xml
      do
        echo -e "Hierarchy dump for $f\n"
        cat "$f"
      done

      echo -e "\n\n----LOGCAT----\n"
      cat logcat.txt
    fi
